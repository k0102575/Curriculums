/* 멀티 태스킹 : 스레드의 라이프 사이클 */

package step19;

public class Test07 {
  
  static class Dog extends Thread {
    public void run() {
      try {
        this.wait();
      } catch (InterruptedException e) {
        e.printStackTrace();
      }
      System.out.println("멍멍!!");
    } // run()
  } // class Dog
  
  static class Thief extends Thread {
    int length = 100;
    
    public void run() {
      while (true) {
        length -= 10;
        if (length == 0) {
          this.notifyAll();
        }
        try {
          Thread.sleep(1000);
        } catch (InterruptedException e) {}
      } //while
      
    } // run()
    
  } // class MyThread 쓰레드 상속
  
  public static void main(String[] args) {
    System.out.println("step19 Test07 실행중");
    System.out.println();
    
    Worker worker = new Worker();
    
    MyThread t1 = new MyThread(worker);
    
    t1.start();
    
    System.out.println("main() 끝!");
    
  }
}
