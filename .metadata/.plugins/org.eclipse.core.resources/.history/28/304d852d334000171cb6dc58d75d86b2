/* 멀티 태스킹 : 스레드의 라이프 사이클 */

package step19;

public class Test07 {
  
  static class Food {
    synchronized public void eat() throws Exception {
      this.wait();
      System.out.println("냠냠 쩝쩝");
    }
  } // Class Food
  
  static class Dog extends Thread {
    Food food;
    
    public Dog(Food food) {
      this.food = food;
    }
    
    public void run() {
      try {
        food.eat();
      } catch (InterruptedException e) {
        e.printStackTrace();
      }
      System.out.println("멍멍!!");
    } // run()
  } // class Dog
  
  static class Counter extends Thread {
    int count = 110;
    
    public void run() {
      while (true) {
         -= 10;
        if (length == 0) {
          this.notifyAll();
        }
        try {
          Thread.sleep(1000);
        } catch (InterruptedException e) {}
      } //while
      
    } // run()
    
  } // class MyThread 쓰레드 상속
  
  public static void main(String[] args) {
    System.out.println("step19 Test06 실행중");
    System.out.println();
    
    Dog dog = new Dog();
    dog.start();
    
    System.out.println("보안 장치 작동!");
  }
}
