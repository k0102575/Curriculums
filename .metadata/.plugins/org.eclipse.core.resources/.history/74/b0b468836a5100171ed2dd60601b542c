package bitcamp.java93.servlet;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import bitcamp.java93.domain.Member;
import bitcamp.java93.service.MemberService;

@WebServlet(urlPatterns="/auth/login")
public class LoginServlet extends HttpServlet {

  private static final long serialVersionUID = 1L;

  @Override
  protected void doGet(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
    RequestDispatcher rd = RequestDispatcher("/auth/form.jsp");
        
    
    return;
  }

  @Override
  public void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {

    String email = req.getParameter("email");
    String password = req.getParameter("password");

    try {

      MemberService memberService = (MemberService)this.getServletContext().getAttribute("memberService");      
      Member member = memberService.check(email, password);

      if (member != null) {
        
        HttpSession session = req.getSession();
        
        session.setAttribute("loginMember", member);
        
        String saveEmail = req.getParameter("saveEmail");
        if (saveEmail != null) {
          Cookie cookie2 = new Cookie("email", email);
          cookie2.setMaxAge(60 * 60 * 24 * 7);
          res.addCookie(cookie2);
        } else {
          Cookie cookie2 = new Cookie("email", "");
          cookie2.setMaxAge(0);
          res.addCookie(cookie2);
        }

        res.sendRedirect("../member/list");

      } else {

        res.setContentType("text/html;charset=UTF-8");
        PrintWriter out = res.getWriter();

        out.println("<!DOCTYPE html>");
        out.println("<html>");
        out.println("<head>");
        out.println("<meta charset='UTF-8'>");
        out.println("<title>로그인</title>");


        out.println("</head>");
        out.println("<body>");

        res.setHeader("Refresh", "2;url=login");

        out.println("<h1>로그인 오류!</h1>");

        out.println("<p>이메일 또는 암호가 맞지 않습니다.</p>");

        out.println("</body>");
        out.println("</html>");
      }

    } catch (Exception e) {
      req.setAttribute("error", e);
      return;
    }

  } // service()

}
