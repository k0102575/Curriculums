package bitcamp.java93.servlet;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import bitcamp.java93.dao.MemberDao;
import bitcamp.java93.domain.Member;

@WebServlet(urlPatterns="/auth/login")
public class LoginServlet extends HttpServlet {

  private static final long serialVersionUID = 1L;
  
  @Override
  protected void doGet(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
    
    res.setContentType("text/html;charset=UTF-8");
    PrintWriter out = res.getWriter();
    
    out.println("<!DOCTYPE html>");
    out.println("<html>");
    out.println("<head>");
    out.println("<meta charset='UTF-8'>");
    out.println("<title>로그인</title>");
    
    RequestDispatcher rd = req.getRequestDispatcher("/style/core");
    rd.include(req, res);
    
    out.println("</head>");
    out.println("<body>");
    
    rd = req.getRequestDispatcher("/header");
    rd.include(req, res);
    
    out.println("<h1>회원 로그인</h1>");
    out.println("<form action='login' method='POST'>");
    out.println("<p>이메일:<input type='text' name='email'></p>");
    out.println("<p>암호:<input type='password' name='password'></p>");
    out.println("<p><button>등록</button></p>");
    out.println("</form>");
    
    rd = req.getRequestDispatcher("/footer");
    rd.include(req, res);
    
    out.println("</body> ");
    out.println("</html>");
    
  }

  @Override
  public void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
    
    String email = req.getParameter("email");
    String password = req.getParameter("password");
    
    try {
      
      MemberDao memberDao = (MemberDao) this.getServletContext().getAttribute("memberDao");
      
      Member member = memberDao.selectOneByEmailPassword(email, password);
      
      if (member != null) {
        String sessionId = "id_" + System.currentTimeMillis();
        this.getServletContext().setAttribute(sessionId, member);
        
        Cookie cookie = new Cookie("sessionId", sessionId);
        
        cookie.setPath(req.getContextPath());
        
        res.addCookie(cookie);
        
        res.sendRedirect("../member/list");
        
      } else {
        
        res.setContentType("text/html;charset=UTF-8");
        PrintWriter out = res.getWriter();
        
        out.println("<!DOCTYPE html>");
        out.println("<html>");
        out.println("<head>");
        out.println("<meta charset='UTF-8'>");
        out.println("<title>로그인</title>");
        
        RequestDispatcher rd = req.getRequestDispatcher("/style/core");
        rd.include(req, res);
        
        out.println("</head>");
        out.println("<body>");
        
        res.setHeader("Refresh", "2;url=login.html");
        
        out.println("<h1>로그인 오류!</h1>");
        
        out.println("<p>이메일 또는 암호가 맞지 않습니다.</p>");
        
        rd = req.getRequestDispatcher("/footer");
        rd.include(req, res);
        
        out.println("</body>");
        out.println("</html>");
      }
      
    } catch (Exception e) {
      req.setAttribute("error", e);
      
      RequestDispatcher rd = req.getRequestDispatcher("/error");
      rd.forward(req, res);
      
      return;
    }
    
  } // service()

}
