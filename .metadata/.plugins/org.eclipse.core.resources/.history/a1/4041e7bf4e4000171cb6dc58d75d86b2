/* 소켓 프로그래밍: HTTP 클라이언트 만들기 */

package step18;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.net.Socket;
import java.util.Scanner;
import java.io.DataOutputStream;

public class Test05_1 {
  public static void main(String[] args) throws IOException {
//
//    System.out.println("step18 Test05_1 클라이언트 실행중");
//    System.out.println();

    if (args.length < 1) {
      System.out.println("[사용법] > java -cp bin step18.Test05_1 URL");
      return;
    }
    
    //  http:// 를 빈문자열로 만들어라
    String url = args[0].replace("http://", "");
    String host = null;
    
    int port = 80;
    int colonIndex = url.indexOf(":");
    int firstSlashIndex = url.indexOf("/");
    String path = url.substring(firstSlashIndex);  // 슬레쉬 포함 
    
    if (colonIndex >= 0) {
      host = url.substring(0, colonIndex);
      port = Integer.parseInt(url.substring(colonIndex + 1, firstSlashIndex));
    } else {
      host = url.substring(0, firstSlashIndex);
    }
    
    try 
    (
    
    Socket socket = new Socket(host, port);
    BufferedInputStream in = new BufferedInputStream(socket.getInputStream());
    PrintStream out = new PrintStream(
                           new BufferedOutputStream(socket.getOutputStream()));
    ) 
    {
      // request line - 예) GET /test/ok/index.hjtml HTTP/1.1 CRLF
      
      out.printf("GET %s HTTP/1.1\n", path);
      
      out.writeLong(file.length());
      
      for (long i = 0; i < file.length(); i++) {
        out.writeByte(fileIn.read());
      }
      
      out.flush();
      
      System.out.println(in.nextLine());
    } catch (Exception e) {
      e.printStackTrace();
    }
    
  }  // main
}
