package bitcamp.java93.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import bitcamp.java93.domain.Teacher;
import bitcamp.java93.util.DBConnectionPool;

public interface TeacherDao {

  List<Teacher> selectList(int pageNo, int pageSize) throws Exception; // selectList()

  Teacher selectOne(int no) throws Exception; // selectOne()

  int insert(Teacher teacher) throws Exception; // insert()

  public int delete(int no) throws Exception; // delete()

  public int update(Teacher teacher) throws Exception; // update()

  public Teacher selectOneByEmailPassword(String email, String password) throws Exception {
    Connection con = conPool.getConnection();

    try (
        PreparedStatement stmt = con.prepareStatement
        ("select mno, name, tel, email from memb where email=? and pwd=password(?)");
        ) {
      
      stmt.setString(1, email);
      stmt.setString(2, password);

      try(ResultSet rs = stmt.executeQuery();) {
        if (!rs.next()) {
          return null;
        }

        Teacher teacher = new Teacher();
        teacher.setNo(rs.getInt("mno"));
        teacher.setName(rs.getString("name"));
        teacher.setTel(rs.getString("tel"));
        teacher.setEmail(rs.getString("email"));
        teacher.setHomepage("homg");
        teacher.setFacebook("fcbk");
        teacher.setTwitter("twit");

        return teacher;

      } // try

    } finally {
      conPool.returnConnection(con);
    }

  } // selectOneByEmailPassword()

  public void insertPhoto(int no, List<String> photoList) throws Exception {
    Connection con = conPool.getConnection();
    try(
        PreparedStatement stmt = con.prepareStatement(
            "insert into tch_phot(tno, path) values(?,?)");
        ) {
      for (String path : photoList) {
        stmt.setInt(1, no);
        stmt.setString(2, path);
        stmt.executeUpdate();
      }

    } finally {
      conPool.returnConnection(con);
    }

  } // insertPhoto()

  public List<String> selectPhotoList(int teacherNo) throws Exception {
    Connection con = conPool.getConnection();
    try (
        PreparedStatement stmt = con.prepareStatement(
            "select path from tch_phot where tno=?");
        ) {
      stmt.setInt(1, teacherNo);

      ArrayList<String> list = new ArrayList<>();
      try(ResultSet rs = stmt.executeQuery();) {

        while (rs.next()) {
          list.add(rs.getString("path"));
        } // while

      } // try
      
      return list;
    
    } finally {
      conPool.returnConnection(con);
    }

  } // selectPhotoList()
  
  public void deletePhoto(int teacherNo) throws Exception {
    Connection con = conPool.getConnection();
    try(
        PreparedStatement stmt = con.prepareStatement("delete from tch_phot where tno=?");
        ) {
      stmt.setInt(1, teacherNo);
      stmt.executeUpdate();

    } finally {
      conPool.returnConnection(con);
    }

  } // deletePhoto()

}
